import { db } from '@/lib/db/drizzle';
import { productCatalog } from '@/lib/db/schema.v2';
import { eq } from 'drizzle-orm';

/**
 * Helper to keep objects short & consistent
 */
function p({
  slug,
  name,
  logo,
  vendor,
  category,
  description,
  tags = [],
  matchTerms = [],
  links,
}: {
  slug: string;
  name: string;
  logo: string; // path under /public
  vendor?: string;
  category?: string;
  description?: string;
  tags?: string[];
  matchTerms?: string[];
  links?: Record<string, string>;
}) {
  return {
    slug,
    name,
    vendor: vendor || null,
    category: category || null,
    description: description || null,
    logoLightPath: logo,
    tags,
    matchTerms,
    links: links || null,
  } as Omit<typeof productCatalog.$inferInsert, 'id' | 'createdAt' | 'updatedAt'>;
}

/**
 * Catalog
 * - Use the *_light.png variant where it exists.
 * - matchTerms should include common CW “addition” names/aliases.
 */
const PRODUCTS: Omit<typeof productCatalog.$inferInsert, 'id' | 'createdAt' | 'updatedAt'>[] = [
  // --- you already had these ---
  p({
    slug: 'microsoft-365',
    name: 'Microsoft 365',
    vendor: 'Microsoft',
    category: 'Productivity',
    description: 'Microsoft 365 business subscriptions.',
    logo: '/logos/microsoft250.png',
    tags: ['o365', 'm365', 'office'],
    matchTerms: ['microsoft 365', 'office 365', 'm365', 'o365', 'office', 'exchange online', 'sharepoint', 'teams', 'intune', 'azure ad', 'entra id'],
    links: { site: 'https://admin.microsoft.com' },
  }),
  p({
    slug: 'veeam',
    name: 'Veeam',
    vendor: 'Veeam',
    category: 'Backup',
    description: 'Veeam backup & replication.',
    logo: '/logos/Veeam250.png',
    tags: ['backup'],
    matchTerms: ['veeam', 'vbr', 'veeam backup'],
    links: { site: 'https://www.veeam.com' },
  }),
  p({
    slug: 'acronis',
    name: 'Acronis',
    vendor: 'Acronis',
    category: 'Backup',
    description: 'Acronis Cyber Protect.',
    logo: '/logos/acronis250.png',
    tags: ['backup'],
    matchTerms: ['acronis', 'acronis cyber', 'acronis backup'],
    links: { site: 'https://www.acronis.com' },
  }),
  p({
    slug: 'webroot',
    name: 'Webroot',
    vendor: 'Webroot',
    category: 'Security',
    description: 'Webroot endpoint protection.',
    logo: '/logos/webroot250.png',
    tags: ['av', 'edr'],
    matchTerms: ['webroot', 'webroot secureanywhere'],
    links: { site: 'https://my.webrootanywhere.com' },
  }),
  p({
    slug: 'sentinelone',
    name: 'SentinelOne',
    vendor: 'SentinelOne',
    category: 'Security',
    description: 'SentinelOne EDR.',
    logo: '/logos/sentinel250.png',
    tags: ['edr'],
    matchTerms: ['sentinelone', 's1'],
    links: { site: 'https://sentinelone.com' },
  }),
  p({
    slug: 'barracuda',
    name: 'Barracuda',
    vendor: 'Barracuda',
    category: 'Security',
    description: 'Barracuda email security / backup.',
    logo: '/logos/barracuda250.png',
    tags: ['email', 'security'],
    matchTerms: ['barracuda', 'ess', 'barracuda ess', 'barracuda email'],
    links: { site: 'https://login.barracudanetworks.com' },
  }),
  p({
    slug: 'mimecast',
    name: 'Mimecast',
    vendor: 'Mimecast',
    category: 'Security',
    description: 'Email security & continuity.',
    logo: '/logos/mimecast250.png',
    tags: ['email', 'security'],
    matchTerms: ['mimecast'],
    links: { site: 'https://login.mimecast.com' },
  }),
  p({
    slug: 'knowbe4',
    name: 'KnowBe4',
    vendor: 'KnowBe4',
    category: 'Awareness',
    description: 'Security awareness training.',
    logo: '/logos/knowbe4250.png',
    tags: ['training', 'phishing'],
    matchTerms: ['knowbe4', 'kb4'],
    links: { site: 'https://training.knowbe4.com' },
  }),
  p({
    slug: 'exclaimer',
    name: 'Exclaimer',
    vendor: 'Exclaimer',
    category: 'Email',
    description: 'Email signatures management.',
    logo: '/logos/exclaimer250.png',
    tags: ['email'],
    matchTerms: ['exclaimer'],
    links: { site: 'https://portal.exclaimer.com' },
  }),
  p({
    slug: 'sonicwall',
    name: 'SonicWall',
    vendor: 'SonicWall',
    category: 'Network',
    description: 'Firewalls and security services.',
    logo: '/logos/sonicwall250.png',
    tags: ['network', 'firewall'],
    matchTerms: ['sonicwall', 'sonic wall', 'tz', 'ns'],
    links: { site: 'https://mysonicwall.com' },
  }),
  p({
    slug: 'meraki',
    name: 'Cisco Meraki',
    vendor: 'Cisco',
    category: 'Network',
    description: 'Meraki cloud networking.',
    logo: '/logos/meraki250.png',
    tags: ['network'],
    matchTerms: ['meraki', 'cisco meraki', 'mx', 'mr', 'ms'],
    links: { site: 'https://dashboard.meraki.com' },
  }),
  p({
    slug: 'cove',
    name: 'Cove',
    vendor: 'N-able',
    category: 'Backup',
    description: 'N-able Cove backup.',
    logo: '/logos/cove250.png',
    tags: ['backup'],
    matchTerms: ['cove', 'n-able cove', 'nable cove', 'solarwinds cove'],
  }),
  p({
    slug: 'datto',
    name: 'Datto',
    vendor: 'Datto',
    category: 'Backup',
    description: 'Datto BCDR & SaaS backup.',
    logo: '/logos/datto250.png',
    tags: ['backup', 'bcdr'],
    matchTerms: ['datto', 'siris', 'alto', 'backupify'],
  }),
  p({
    slug: 'skykick',
    name: 'SkyKick',
    vendor: 'SkyKick',
    category: 'Backup',
    description: 'Cloud backup & migration.',
    logo: '/logos/skykick250.png',
    tags: ['backup', 'migration'],
    matchTerms: ['skykick'],
  }),
  p({
    slug: 'smtp2go',
    name: 'SMTP2GO',
    vendor: 'SMTP2GO',
    category: 'Email',
    description: 'Reliable outbound email.',
    logo: '/logos/smtp2go250.png',
    tags: ['email'],
    matchTerms: ['smtp2go', 'smtp 2 go'],
  }),

  // --- new adds from your list ---
  p({
    slug: '3cx',
    name: '3CX',
    vendor: '3CX',
    category: 'Telephony',
    description: '3CX cloud/onsite PBX.',
    logo: '/logos/3cx250.png',
    tags: ['voip', 'pbx', 'phone'],
    matchTerms: ['3cx', '3 cx'],
  }),
  p({
    slug: 'activtrak',
    name: 'ActivTrak',
    vendor: 'ActivTrak',
    category: 'Productivity',
    description: 'Workforce analytics & productivity.',
    logo: '/logos/activtrak250.png',
    tags: ['analytics', 'productivity'],
    matchTerms: ['activtrak', 'activ trak'],
  }),
  p({
    slug: 'arcserve',
    name: 'Arcserve',
    vendor: 'Arcserve',
    category: 'Backup',
    description: 'Arcserve backup/UDP (incl. StorageCraft).',
    logo: '/logos/arcserve250.png',
    tags: ['backup'],
    matchTerms: ['arcserve', 'udp', 'arc serve'],
  }),
  p({
    slug: 'autoelevate',
    name: 'AutoElevate',
    vendor: 'CyberFOX',
    category: 'Security',
    description: 'Just-in-time local admin elevation.',
    logo: '/logos/AutoElevate250.png',
    tags: ['privilege', 'pam'],
    matchTerms: ['autoelevate', 'auto elevate'],
  }),
  p({
    slug: 'connectwise-automate',
    name: 'ConnectWise Automate',
    vendor: 'ConnectWise',
    category: 'RMM',
    description: 'CW Automate (LabTech) RMM.',
    logo: '/logos/automate250.png',
    tags: ['rmm'],
    matchTerms: ['connectwise automate', 'cw automate', 'labtech', 'lab tech'],
  }),
  p({
    slug: 'connectwise-manage',
    name: 'ConnectWise Manage',
    vendor: 'ConnectWise',
    category: 'PSA',
    description: 'CW Manage PSA.',
    logo: '/logos/cwmanage.png',
    tags: ['psa'],
    matchTerms: ['connectwise manage', 'cw manage'],
  }),
  p({
    slug: 'auvik',
    name: 'Auvik',
    vendor: 'Auvik',
    category: 'Network',
    description: 'Network monitoring & mapping.',
    logo: '/logos/auvik250.png',
    tags: ['network', 'nms'],
    matchTerms: ['auvik'],
  }),
  p({
    slug: 'azure',
    name: 'Microsoft Azure',
    vendor: 'Microsoft',
    category: 'Cloud',
    description: 'Azure cloud services.',
    logo: '/logos/azure250.png',
    tags: ['cloud'],
    matchTerms: ['azure', 'microsoft azure'],
  }),
  p({
    slug: 'avd',
    name: 'Azure Virtual Desktop',
    vendor: 'Microsoft',
    category: 'Cloud',
    description: 'Azure Virtual Desktop (AVD).',
    logo: '/logos/avdlogo250.png',
    tags: ['cloud', 'virtual desktop'],
    matchTerms: ['avd', 'azure virtual desktop', 'wvd', 'windows virtual desktop'],
  }),
  p({
    slug: 'caelum',
    name: 'Caelum',
    vendor: 'Caelum',
    category: 'Other',
    description: 'Caelum (placeholder).',
    logo: '/logos/caelum250.png',
    tags: [],
    matchTerms: ['caelum'],
  }),
  p({
    slug: 'crossware',
    name: 'Crossware',
    vendor: 'Crossware',
    category: 'Email',
    description: 'Email signatures for Microsoft 365.',
    logo: '/logos/crossware250.png',
    tags: ['email', 'signature'],
    matchTerms: ['crossware'],
  }),
  p({
    slug: 'easydmarc',
    name: 'EasyDMARC',
    vendor: 'EasyDMARC',
    category: 'Email',
    description: 'DMARC/SPF/DKIM monitoring & enforcement.',
    logo: '/logos/easydmarc250.png',
    tags: ['email', 'dmarc'],
    matchTerms: ['easydmarc', 'easy dmarc'],
  }),
  p({
    slug: 'fortinet',
    name: 'Fortinet',
    vendor: 'Fortinet',
    category: 'Security',
    description: 'FortiGate/EMS security solutions.',
    logo: '/logos/fortinet250.png',
    tags: ['security', 'firewall'],
    matchTerms: ['fortinet', 'fortigate', 'forti', 'forti gate'],
  }),
  p({
    slug: 'giacom',
    name: 'Giacom Cloud Market',
    vendor: 'Giacom',
    category: 'Distribution',
    description: 'Cloud Market distributor.',
    logo: '/logos/giacom250.png',
    tags: ['marketplace'],
    matchTerms: ['giacom', 'cloud market'],
  }),
  p({
    slug: 'icuk',
    name: 'ICUK',
    vendor: 'ICUK',
    category: 'Connectivity',
    description: 'Broadband/VoIP services.',
    logo: '/logos/icuk250.png',
    tags: ['isp', 'voip'],
    matchTerms: ['icuk'],
  }),
  p({
    slug: 'keeper',
    name: 'Keeper',
    vendor: 'Keeper Security',
    category: 'Security',
    description: 'Password manager & secrets.',
    logo: '/logos/keeper250.png',
    tags: ['password', 'pam'],
    matchTerms: ['keeper', 'keeper security'],
  }),
  p({
    slug: 'mailstore',
    name: 'MailStore',
    vendor: 'MailStore',
    category: 'Email',
    description: 'Email archiving.',
    logo: '/logos/mailstore250.png',
    tags: ['email', 'archive'],
    matchTerms: ['mailstore', 'mail store'],
  }),
  p({
    slug: 'miradore',
    name: 'Miradore',
    vendor: 'Miradore',
    category: 'MDM',
    description: 'Device management (MDM).',
    logo: '/logos/miradore250.png',
    tags: ['mdm'],
    matchTerms: ['miradore'],
  }),
  p({
    slug: 'phishingbox',
    name: 'PhishingBox',
    vendor: 'PhishingBox',
    category: 'Awareness',
    description: 'Phishing simulation & training.',
    logo: '/logos/phishingbox250.png',
    tags: ['training', 'phishing'],
    matchTerms: ['phishingbox', 'phishing box'],
  }),
  p({
    slug: 'qualys',
    name: 'Qualys',
    vendor: 'Qualys',
    category: 'Security',
    description: 'Vulnerability management.',
    logo: '/logos/qualys250.png',
    tags: ['vulnerability'],
    matchTerms: ['qualys'],
  }),
  p({
    slug: 'storagecraft',
    name: 'StorageCraft',
    vendor: 'Arcserve',
    category: 'Backup',
    description: 'Legacy StorageCraft (now Arcserve).',
    logo: '/logos/storagecraft250.png',
    tags: ['backup'],
    matchTerms: ['storagecraft', 'storage craft', 'shadowprotect', 'shadow protect'],
  }),
  p({
    slug: 'unifi',
    name: 'Ubiquiti UniFi',
    vendor: 'Ubiquiti',
    category: 'Network',
    description: 'UniFi networking & Wi-Fi.',
    logo: '/logos/unifi250.png',
    tags: ['network', 'wifi'],
    matchTerms: ['unifi', 'ubiquiti', 'u6', 'usg', 'udm'],
  }),
  p({
    slug: 'usecure',
    name: 'usecure',
    vendor: 'usecure',
    category: 'Awareness',
    description: 'Security awareness & phishing.',
    logo: '/logos/usecure250.png',
    tags: ['training', 'phishing'],
    matchTerms: ['usecure', 'u secure'],
  }),
  // (Veeam, Webroot, Barracuda, Mimecast already above)
  p({
    slug: 'zyxel',
    name: 'Zyxel',
    vendor: 'Zyxel',
    category: 'Network',
    description: 'Zyxel networking & security.',
    logo: '/logos/zyxel250.png',
    tags: ['network', 'firewall'],
    matchTerms: ['zyxel', 'usg flex', 'atp'],
  }),
];

export async function seedProducts() {
  for (const p of PRODUCTS) {
    const existing = await db.query.productCatalog.findFirst({
      where: eq(productCatalog.slug, p.slug),
      columns: { id: true },
    });
    if (existing) {
      await db
        .update(productCatalog)
        .set({ ...p, updatedAt: new Date() })
        .where(eq(productCatalog.id, existing.id));
    } else {
      await db.insert(productCatalog).values(p);
    }
  }
}
